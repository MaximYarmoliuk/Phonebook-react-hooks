{"version":3,"sources":["components/NameOfContactExist/NameOfContactExist.module.css","components/FillInEntryFields/FillInEntryFields.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/NameExist.module.css","components/ContactForm/FillInEntryFields.module.css","components/ContactListItem/ContactListItem.module.css","../node_modules/@material-ui/icons/Delete.js","components/ContactList/ContactList.module.css","components/ContactList/Items.module.css","components/Filter/Filter.module.css","views/Contacts/ContactListStyles.module.css","views/Contacts/FilterStyles.module.css","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/NameOfContactExist/NameOfContactExist.js","components/FillInEntryFields/FillInEntryFields.js","components/ContactForm/ContactForm.js","helpers/removeMessage.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/Contacts/Contacts.js"],"names":["module","exports","_interopRequireDefault","require","Object","defineProperty","value","default","_react","_default","createElement","d","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","node","classes","split","forEach","c","className","element","classList","remove","setAttribute","baseVal","CSSTransition","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","appliedClasses","appear","enter","exit","onEnter","appearing","removeClasses","addClass","props","onEntering","type","onEntered","onExit","onExiting","onExited","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","prototype","phase","scrollTop","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","_objectWithoutPropertiesLoose","React","Transition","_extends","Component","defaultProps","propTypes","axios","defaults","baseURL","headers","post","name","number","dispatch","contactActions","addContactsRequest","then","data","addContactsSuccess","catch","err","message","errorMessage","getErrorText","addContactsError","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","contactId","removeContactsRequest","delete","removeContactsSuccess","removeContactsError","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","contact","toLowerCase","includes","getLoading","loading","getContactById","find","id","NameOfContactExist","styles","text","FillInEntryFields","ContactForm","useDispatch","useState","setName","setNumber","nameExistErr","setNameExistErr","entryFieldsErr","setEntryFieldsErr","useSelector","contactsSelectors","in","entryFieldsStyles","timeout","unmountOnExit","nameExistStyles","contactForm","onSubmit","e","preventDefault","checkLength","string","checkOnExist","setTimeout","contactsOperations","TextField","label","variant","contactInput","onChange","target","contactSubmit","removeMessage","func","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","ContactListItem","onRemoveContact","item","fontSize","button","onClick","ContactList","TransitionGroup","component","container","map","key","itemsStyles","Filter","input","contactsActions","changeFilter","Contacts","useEffect","filterStyles","contactListStyles"],"mappings":"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","file":"static/js/4.3222fb25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"NameOfContactExist_text__13xV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"FillInEntryFields_text__aPIHu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1FkVU\",\"contactInput\":\"ContactForm_contactInput__26UwE\",\"contactSubmit\":\"ContactForm_contactSubmit__1dvLP\",\"active\":\"ContactForm_active__3YDAW\",\"nameOfContactExist\":\"ContactForm_nameOfContactExist__Pr_cT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"NameExist_enter__2ERpk\",\"enterActive\":\"NameExist_enterActive__2saw_\",\"exit\":\"NameExist_exit__2acUn\",\"exitActive\":\"NameExist_exitActive__2cENv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"FillInEntryFields_enter__-Y5JA\",\"enterActive\":\"FillInEntryFields_enterActive__2PQ9O\",\"exit\":\"FillInEntryFields_exit__2e_W8\",\"exitActive\":\"FillInEntryFields_exitActive__3I2Ul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__3zXkx\",\"button\":\"ContactListItem_button__3q4KJ\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__3RD9g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Items_enter__xWwAU\",\"enterActive\":\"Items_enterActive__3bUqr\",\"exit\":\"Items_exit__1ET1Q\",\"exitActive\":\"Items_exitActive__1kBYT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__7qxHh\",\"label\":\"Filter_label__31Ax5\",\"input\":\"Filter_input__1gGUh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactListStyles_enter__27FhX\",\"enterActive\":\"ContactListStyles_enterActive__1XtpT\",\"exit\":\"ContactListStyles_exit__3Yz42\",\"exitActive\":\"ContactListStyles_exitActive__3-1Aa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"FilterStyles_enter__2xyN-\",\"enterActive\":\"FilterStyles_enterActive__1T5i3\",\"exit\":\"FilterStyles_exit__qec91\",\"exitActive\":\"FilterStyles_exitActive__1LTGo\"};","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    ;\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](http://www.nganimate.org/) library, you should use it if you're\n * using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (node, appearing) {\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node, appearing);\n      }\n    };\n\n    _this.onEntering = function (node, appearing) {\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node, appearing);\n      }\n    };\n\n    _this.onEntered = function (node, appearing) {\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node, appearing);\n      }\n    };\n\n    _this.onExit = function (node) {\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    };\n\n    _this.onExiting = function (node) {\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    };\n\n    _this.onExited = function (node) {\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    if (type === 'appear' && phase === 'done') {\n      className += \" \" + this.getClassNames('enter').doneClassName;\n    } // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    this.appliedClasses[type][phase] = className;\n\n    _addClass(node, className);\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided and it\n   * will be suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-appear`, `fade-appear-active`,\n   * `fade-appear-done`, `fade-enter`, `fade-enter-active`, `fade-enter-done`,\n   * `fade-exit`, `fade-exit-active`, and `fade-exit-done`.\n   *\n   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.\n   * This allows you to define different behavior for when appearing is done and\n   * when regular entering is done, using selectors like\n   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an\n   * epic entrance animation when element first appears in the DOM using\n   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   * simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","export default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import contactActions from \"./contactsActions\";\r\nimport axios from \"axios\";\r\nimport { getErrorText } from \"../../constants/errorConstants\";\r\nimport errorMessage from '../../helpers/errorMessage'\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  dispatch(contactActions.addContactsRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", {\r\n      name,\r\n      number,\r\n    })\r\n    .then(({ data }) => {\r\n      dispatch(contactActions.addContactsSuccess(data));\r\n    })\r\n    .catch((err) => {\r\n      err.message = \"Request failed with status code 401\"\r\n        ? errorMessage(getErrorText(\"postContactTokenErr\"))\r\n        : errorMessage(getErrorText(\"postContactErr\"));\r\n      dispatch(contactActions.addContactsError(err));\r\n    });\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactActions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(contactActions.fetchContactsSuccess(data)))\r\n    .catch((err) => {\r\n      if ((err.message = \"Request failed with status code 401\")) {\r\n        errorMessage(getErrorText(\"getContactsTokenErr\"));\r\n      } else if ((err.message = \"Request failed with status code 404\")) {\r\n        errorMessage(getErrorText(\"getContactsErr\"));\r\n      } else {\r\n        errorMessage(getErrorText(\"getContactsServerErr\"));\r\n      }\r\n\r\n      dispatch(contactActions.fetchContactsError(err));\r\n    });\r\n};\r\n\r\nconst removeContact = (contactId) => (dispatch) => {\r\n  dispatch(contactActions.removeContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(contactActions.removeContactsSuccess(contactId)))\r\n    .catch((err) => {\r\n      if ((err.message = \"Request failed with status code 401\")) {\r\n        errorMessage(getErrorText(\"deleteContactTokenErr\"));\r\n      } else if ((err.message = \"Request failed with status code 404\")) {\r\n        errorMessage(getErrorText(\"deleteContactErr\"));\r\n      } else {\r\n        errorMessage(getErrorText(\"deleteContactServerErr\"));\r\n      }\r\n      dispatch(contactActions.removeContactsError(err));\r\n    });\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContacts,\r\n  removeContact,\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter)\r\n    );\r\n  }\r\n);\r\n\r\nconst getContactById = (state, contactId) => {\r\n  const contacts = getContacts(state);\r\n\r\n  return contacts.find(contact => contact.id === contactId);\r\n};\r\n\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getLoading,\r\n  getFilteredContacts,\r\n  getContactById\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./NameOfContactExist.module.css\";\r\n\r\nconst NameOfContactExist = () => {\r\n  return <h1 className={styles.text}>Contact already exist!</h1>;\r\n};\r\n\r\nexport default NameOfContactExist;\r\n","import React from \"react\";\r\nimport styles from \"./FillInEntryFields.module.css\";\r\n\r\nconst FillInEntryFields = () => {\r\n  return <h1 className={styles.text}>Please, fill in all required entry fields.</h1>;\r\n};\r\n\r\nexport default FillInEntryFields;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\nimport NameofContactExist from \"../NameOfContactExist/NameOfContactExist\";\r\nimport FillInEntryFields from \"../FillInEntryFields/FillInEntryFields\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport nameExistStyles from \"./NameExist.module.css\";\r\nimport entryFieldsStyles from \"./FillInEntryFields.module.css\";\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [nameExistErr, setNameExistErr] = useState(false);\r\n  const [entryFieldsErr, setEntryFieldsErr] = useState(false);\r\n\r\n  const contacts = useSelector((state) => contactsSelectors.getContacts(state));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const checkLength = (string) => string.length < 1;\r\n\r\n    const checkOnExist = contacts.find((contact) => contact.name === name);\r\n\r\n    if (checkLength(`${name}`) || checkLength(`${number}`)) {\r\n      setEntryFieldsErr(true);\r\n      setTimeout(() => {\r\n        setEntryFieldsErr(false);\r\n      }, 1000);\r\n      return;\r\n    }\r\n\r\n    if (checkOnExist) {\r\n      setNameExistErr(true);\r\n      setTimeout(() => {\r\n        setNameExistErr(false);\r\n      }, 1000);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContact({ name, number }));\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const handleChangeName = ({ target: { value } }) => {\r\n    setName(value);\r\n  };\r\n\r\n  const handleChangeNumber = ({ target: { value } }) => {\r\n    setNumber(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CSSTransition\r\n        in={entryFieldsErr}\r\n        classNames={entryFieldsStyles}\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <FillInEntryFields />\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={nameExistErr}\r\n        classNames={nameExistStyles}\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <NameofContactExist />\r\n      </CSSTransition>\r\n\r\n      <form className={styles.contactForm} onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Name\"\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          value={name}\r\n          name=\"name\"\r\n          className={styles.contactInput}\r\n          onChange={handleChangeName}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Number\"\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          value={number}\r\n          name=\"number\"\r\n          className={styles.contactInput}\r\n          onChange={handleChangeNumber}\r\n        />\r\n\r\n        <button className={styles.contactSubmit} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import Swal from \"sweetalert2\";\r\n\r\nconst removeMessage = (name, func) => {\r\n  Swal.fire({\r\n    title: `You want to remove the contact ${name}. Are you sure?`,\r\n    text: \"You won't be able to revert this!\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.value) {\r\n      func();\r\n      Swal.fire(\"Deleted!\", `Contact has been deleted.`, \"success\");\r\n    }\r\n  });\r\n};\r\n\r\nexport default removeMessage;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\nimport removeMessage from \"../../helpers/removeMessage\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nexport default function ContactListItem({ id }) {\r\n  const contact = useSelector((state) =>\r\n    contactsSelectors.getContactById(state, id)\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const onRemoveContact = () => {\r\n    dispatch(contactsOperations.removeContact(id));\r\n  };\r\n\r\n  return (\r\n    <li className={styles.item}>\r\n      {contact && (\r\n        <p className=\"TaskList-text\">\r\n          {contact.name}: {contact.number}\r\n        </p>\r\n      )}\r\n\r\n      <DeleteIcon\r\n        fontSize=\"large\"\r\n        className={styles.button}\r\n        title=\"Delete contact\"\r\n        type=\"button\"\r\n        onClick={() => removeMessage(contact.name, onRemoveContact)}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport { contactsSelectors } from \"../../redux/contacts\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport itemsStyles from \"./Items.module.css\";\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector((state) =>\r\n    contactsSelectors.getFilteredContacts(state)\r\n  );\r\n  return (\r\n    <div>\r\n      <TransitionGroup component=\"ul\" className={styles.container}>\r\n        {contacts.map(({ id }) => (\r\n          <CSSTransition\r\n            key={id}\r\n            timeout={250}\r\n            classNames={itemsStyles}\r\n            unmountOnExit\r\n          >\r\n            <ContactListItem id={id} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { contactsActions, contactsSelectors } from \"../../redux/contacts\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector((state) => contactsSelectors.getFilter(state));\r\n  return (\r\n    <div className={styles.container}>\r\n      <TextField\r\n        label=\"Find contacts by name\"\r\n        type=\"text\"\r\n        className={styles.input}\r\n        value={value}\r\n        onChange={(e) => dispatch(contactsActions.changeFilter(e.target.value))}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\r\nimport ContactList from \"../../components/ContactList/ContactList\";\r\nimport Filter from \"../../components/Filter/Filter\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\nimport contactListStyles from \"./ContactListStyles.module.css\";\r\nimport filterStyles from \"./FilterStyles.module.css\";\r\n\r\nexport default function Contacts() {\r\n  const contacts = useSelector((state) => contactsSelectors.getContacts(state));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <ContactForm />\r\n      <CSSTransition\r\n        in={contacts.length >= 2}\r\n        timeout={250}\r\n        classNames={filterStyles}\r\n        unmountOnExit\r\n      >\r\n        <Filter />\r\n      </CSSTransition>\r\n      <CSSTransition\r\n        in={contacts.length > 0}\r\n        timeout={250}\r\n        classNames={contactListStyles}\r\n        unmountOnExit\r\n      >\r\n        <ContactList />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}